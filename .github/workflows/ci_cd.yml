name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: echo "No tests yet..."

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build & push image
        run: |
          docker build -t sillycatlover246/devproject:latest .
          docker push sillycatlover246/devproject:latest

  deploy_infrastructure:
    needs: build_and_push
    runs-on: ubuntu-latest 
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init, import, and apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          cd terraform
          terraform init -upgrade
          terraform state list google_container_cluster.primary || \
            terraform import -input=false google_container_cluster.primary projects/devproject-451919/zones/us-central1-a/clusters/devproject-cluster || true
          terraform state list google_container_node_pool.primary_nodes || \
            terraform import -input=false google_container_node_pool.primary_nodes projects/devproject-451919/zones/us-central1-a/clusters/devproject-cluster/nodePools/devproject-cluster-node-pool || true
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

  deploy_app:
    needs: deploy_infrastructure
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install Helm
      uses: azure/setup-helm@v3
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Auth to GCP, install auth plugin, and deploy with Helm
      env:
        SERVICE_ACCOUNT_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_BASE64 }}
      run: |
        # Decode the Base64-encoded service account key into gcp.json
        printf '%s' "$SERVICE_ACCOUNT_JSON" | base64 -d > gcp.json
        gcloud auth activate-service-account --key-file=gcp.json

        if ! command -v gke-gcloud-auth-plugin &> /dev/null; then
          echo "gke-gcloud-auth-plugin not found. Installing via apt-get..."
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
        else
          echo "gke-gcloud-auth-plugin is already installed at: $(which gke-gcloud-auth-plugin)"
        fi

        gcloud container clusters get-credentials devproject-cluster --zone=us-central1-a --project=devproject-451919

        helm upgrade --install devproject ./helm/devproject \
          --set image.repository=sillycatlover246/devproject \
          --set image.tag=latest \
          --set env.FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}


