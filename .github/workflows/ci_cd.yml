name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: |
          echo "No tests yet..."

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build & push image
        run: |
          docker build -t sillycatlover246/devproject:latest .
          docker push sillycatlover246/devproject:latest

  deploy_infrastructure:
    needs: build_and_push
    runs-on: ubuntu-latest 
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: devproject-451919

    - name: Verify gcloud auth
      run: |
        gcloud auth list
        gcloud container clusters list --zone=us-central1-a
        
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform init
      run: |
        cd terraform
        terraform init -upgrade

    - name: Terraform import cluster
      run: |
        cd terraform
        # Write credentials to a file for Terraform
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > /tmp/gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        
        # Try the import with explicit project ID
        terraform import \
          -var="project_id=devproject-451919" \
          google_container_cluster.primary \
          projects/devproject-451919/zones/us-central1-a/clusters/devproject-cluster \
          || echo "Import failed, but continuing..."
          
    - name: Terraform import node pool
      run: |
        cd terraform
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        
        terraform import \
          -var="project_id=devproject-451919" \
          google_container_node_pool.primary_nodes \
          projects/devproject-451919/zones/us-central1-a/clusters/devproject-cluster/nodePools/devproject-cluster-node-pool \
          || echo "Import failed, but continuing..."
    
    - name: Terraform plan
      run: |
        cd terraform
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        terraform plan -out=tfplan

    - name: Terraform apply
      run: |
        cd terraform
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
        terraform apply -auto-approve tfplan || echo "Apply may have partially succeeded"

  deploy_app:
    needs: deploy_infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: devproject-451919

      - name: Get cluster credentials
        run: |
          gcloud container clusters get-credentials devproject-cluster --zone=us-central1-a --project=devproject-451919

      - name: Helm upgrade/install
        run: |
          helm upgrade --install devproject ./helm/devproject \
            --set image.repository=sillycatlover246/devproject \
            --set image.tag=latest \
            --set env.FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}