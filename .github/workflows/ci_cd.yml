name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: |
          echo "No tests yet..."
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build & push image
        run: |
          docker build -t sillycatlover246/devproject:latest .
          docker push sillycatlover246/devproject:latest

  deploy_infrastructure:
    needs: build_and_push  # or run in parallel
    runs-on: ubuntu-latest 
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init & apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          cd terraform
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

  deploy_app:
    needs: deploy_infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Auth to GCP
        env:
          SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_BASE64 }}
        run: |
          echo "$SERVICE_ACCOUNT_KEY_BASE64" | base64 -d > gcp.json
          gcloud auth activate-service-account --key-file=gcp.json
          gcloud container clusters get-credentials devproject-cluster --zone=us-central1-a --project=devproject-451919
      
      - name: Helm upgrade/install
        run: |
          helm upgrade --install devproject ./helm/devproject \
            --set image.repository=sillycatlover246/devproject \
            --set image.tag=latest \
            --set env.FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}